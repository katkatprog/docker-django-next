version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      args:
        WORK_DIR: $WORK_DIR
    volumes: 
      - ./frontend:$WORK_DIR
      - front_node_modules:$WORK_DIR/$FRONT_PROJECT_NAME/node_modules
    command: sh -c "cd $FRONT_PROJECT_NAME && npm run dev"

    ports:
      - "$FRONT_PORT:3000"
    depends_on:
      - backend
    # entrypoint:
    #   - dockerize
    #   - -timeout
    #   - 60s
    #   - -wait
    #   - tcp://backend:$BACK_PORT

  backend:
    build:
      context: ./backend
      args:
        WORK_DIR: $WORK_DIR
        BACK_PROJECT_NAME: $BACK_PROJECT_NAME
    environment:
      # BACK_SECRET_KEY: $BACK_SECRET_KEY
      DB_PORT: $DB_PORT
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER
      DB_PASS: $DB_PASS
      DB_ROOT_PASS: $DB_ROOT_PASS
      FRONT_PORT: $FRONT_PORT
    volumes:
      - ./backend:$WORK_DIR
      - back_py_modules:/root/.local/share
    command: sh -c "cd $BACK_PROJECT_NAME && pipenv shell && python manage.py runserver 0:8000"
    ports:
      - "$BACK_PORT:8000"
    depends_on:
      - db
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - tcp://db:$DB_PORT

  db:
    image: mysql:5.7.22
    restart: always
    environment:
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASS
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASS
    volumes:
      - db_store:/var/lib/mysql
    ports:
      - $DB_PORT:3306
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

volumes:
  db_store:
  front_node_modules:
  back_py_modules:
